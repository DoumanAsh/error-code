name: min-rust-version

env:
  rust_version: "1.36.0"

on:
  push:
    branches:
      - master
    paths:
      - '.github/workflows/rust.yml'
      - 'src/**.rs'
      - 'tests/**'
      - 'Cargo.toml'
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    branches:
      - '**'
    paths:
      - '.github/workflows/rust.yml'
      - 'src/**.rs'
      - 'tests/**'
      - 'Cargo.toml'

jobs:
  build:

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        # Mac OS broke old rustc so do not check on it
        os: [windows-latest, ubuntu-latest]

    steps:
    - uses: actions/checkout@v1

    - name: Install Rust Unix
      if: runner.os != 'Windows'
      run: |
        if rustup --version >/dev/null 2>&1; then
            rustup install ${{ env.rust_version }}
            rustup default ${{ env.rust_version }}
        else
            curl https://sh.rustup.rs -sSf | sh -s -- -y --profile minimal --default-toolchain ${{ env.rust_version }}
            echo ::add-path::$HOME/.cargo/bin
        fi
    - name: Install Rust Windows
      if: runner.os == 'Windows'
      run: |
        if (Get-Command "rustup" -ErrorAction SilentlyContinue) {
            rustup install ${{ env.rust_version }}
            rustup default ${{ env.rust_version }}
        } else {
            Invoke-WebRequest https://static.rust-lang.org/rustup/dist/i686-pc-windows-gnu/rustup-init.exe -OutFile rustup-init.exe
            ./rustup-init.exe -y --profile minimal --default-toolchain ${{ env.rust_version }}
            echo ::add-path::%USERPROFILE%\.cargo\bin
        }

    - name: Rust version
      run: |
        cargo --version
        rustc --version

    - name: Check
      run: |
        cargo check
